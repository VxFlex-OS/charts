apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-agent
  namespace: {{ .Release.Namespace }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-agent
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-agent
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-agent
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-agent
  apiGroup: rbac.authorization.k8s.io
---
kind: DaemonSet
apiVersion: apps/v1beta2
metadata:
  name: {{ .Release.Name }}-agent
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-agent
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-agent
    spec:
      serviceAccount: {{ .Release.Name }}-agent
      hostNetwork: true
      initContainers:
      - command:
        - rm
        - -rf
        - /var/lib/kubelet/plugins/com.thecodeteam.scaleio/csi.sock
        image: alpine:3.7
        name: init-rm-csi-sock
        volumeMounts:
        - mountPath: /var/lib/kubelet/plugins/com.thecodeteam.scaleio
          name: driver-path
      containers:
        - name: agent
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: {{ required "Must provide the VxFlex OS agent container image." .Values.images.agent }}
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/kubelet/plugins/com.thecodeteam.scaleio/csi.sock
            - name: X_CSI_MODE
              value: node
            - name: X_CSI_DEBUG
              value: "true"
            - name: X_CSI_PRIVATE_MOUNT_DIR
              value: "/var/lib/kubelet/plugins/com.thecodeteam.scaleio/disks"
          volumeMounts:
            - name: driver-path
              mountPath: /var/lib/kubelet/plugins/com.thecodeteam.scaleio
            - name: pods-path
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - name: dev
              mountPath: /dev
            - name: scaleio-path-opt
              mountPath: /opt/emc
            - name: scaleio-path-bin
              mountPath: /bin/emc
        - name: driver-registrar
          image: {{ required "Must provide the CSI registrar container image." .Values.images.registrar }}
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/run/csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: driver-path
              mountPath: /var/run/csi
      volumes:
        - name: driver-path
          hostPath:
            path: /var/lib/kubelet/plugins/com.thecodeteam.scaleio
            type: DirectoryOrCreate
        - name: pods-path
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        - name: dev
          hostPath:
            path: /dev
            type: Directory
        - name: scaleio-path-opt
          hostPath:
            path: /opt/emc
            type: Directory
        - name: scaleio-path-bin
          hostPath:
            path: /bin/emc
            type: Directory
